package bileschi.audiovision;

import java.util.ArrayList;
import java.util.List;

import android.graphics.Bitmap;

public class ImageAudioConverter {

  private static final double HALF_STEP = Math.pow(2, 1.0 / 12);
  private static final int NUM_HALF_STEPS_ALLOWED = (int) (12 * Math
      .log(SoundFactory.MAX_FREQUENCY / SoundFactory.MIN_FREQUENCY));

  public static byte[] imageToSound(Bitmap bitmap) {
    List<? extends List<Double>> samples = new ArrayList<ArrayList<Double>>();
    for (int i = 0; i < bitmap.getWidth(); i++) {
      double percentOfWidth = ((double) i) / bitmap.getWidth();
      for (int j = 0; j < bitmap.getHeight(); j++) {
        double percentOfHeight = ((double) j) / bitmap.getHeight();
        List<Double> newSample = SoundFactory.makeWave(WaveType.SINE, 3,
            percentToFreq(percentOfHeight), percentOfWidth);
      }
    }
  }

  private static double percentToFreq(double percent) {
    SoundFactory.B
  }
}
