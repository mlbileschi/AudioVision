package bileschi.audiovision;

import java.util.ArrayList;
import java.util.List;

public enum WaveType {
  SQUARE {
    public List<Float> makeWave(int sampleRate, int duration, float freqOfTone) {
      int numSamples = duration * sampleRate;
      List<Float> sample = new ArrayList<Float>(numSamples);
      // fill out the array
      for (int i = 0; i < numSamples; i++) {
        float toAdd;
        float k = (sampleRate / freqOfTone);
        float period = (float) .5 * k;
        if (i % period < period / 2) {
          toAdd = 1;
        } else {
          toAdd = -1;
        }
        sample.set(i, toAdd);
      }
      return sample;
    }
  },

  SINE {
    public List<Float> makeWave(int sampleRate, int duration, float freqOfTone) {
      int numSamples = duration * sampleRate;
      List<Float> sample = new ArrayList<Float>(numSamples);
      // fill out the array
      for (int i = 0; i < numSamples; i++) {
        sample.set(i, (float) Math
            .sin(2 * Math.PI * i / (sampleRate / freqOfTone)));
      }
      return sample;
    }
  };

  public abstract List<Float> makeWave(int sampleRate, int duration,
      float freqOfTone);
}